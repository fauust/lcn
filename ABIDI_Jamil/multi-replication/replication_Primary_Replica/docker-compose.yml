# setting replica and slave using old school method : ./script/replication_Primary_Replica.sh
# not very elegant : prefer using the new method with docker-compose.yml and the native option of mariadb docker image
version: "3.8"

services:
  sql-primary:
    image: mariadb:11.4
    container_name: sql-primary
    restart: unless-stopped
    # env_file:
    #   - ./env/mariadb-primary.env
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      - MARIADB_ROOT_PASSWORD=password1234
      - MARIADB_DATABASE=wordpress # Feel free to change this database name
      - MARIADB_USER=wordpressuser # This user will handle wordpress
      - MARIADB_PASSWORD=password1234wordpress
      - MARIADB_REPLICATION_USER=replication_user # This user will handle replication
      - MARIADB_REPLICATION_PASSWORD=password1234replica
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - ./master_data:/var/lib/mysql
      - ./mariadb.conf.d/master.cnf:/etc/mysql/conf.d/master.cnf
    ports:
      - "3306:3306"
    networks:
      - mariadb-network

  sql-replica01:
    image: mariadb:11.4
    container_name: sql-replica01
    restart: unless-stopped
    # env_file:
    #   - ./env/mariadb-replica01.env
    environment:
      - MARIADB_ROOT_PASSWORD=password1234
      - MARIADB_DATABASE=wordpress # Feel free to change this database name
      - MARIADB_REPLICATION_USER=replication_user # This user will handle replication
      - MARIADB_REPLICATION_PASSWORD=password1234replica
      - MARIADB_MASTER_HOST=sql-primary
    depends_on:
      sql-primary:
        condition: service_healthy
    volumes:
      - ./replica_data:/var/lib/mysql
      - ./mariadb.conf.d/replica01.cnf:/etc/mysql/conf.d/replica01.cnf
    networks:
      - mariadb-network
    ports:
      - "3307:3306"

  wordpress:
    image: wordpress:6.6.1
    container_name: wordpress
    depends_on:
      sql-primary:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: on-failure:3
    volumes:
      - ./wordpress:/var/www/html
    environment:
      WORDPRESS_DB_HOST: sql-primary
      WORDPRESS_DB_USER: wordpressuser
      WORDPRESS_DB_PASSWORD: password1234wordpress
      WORDPRESS_DB_NAME: wordpress
    networks:
      - mariadb-network
      - frontend
    ports:
      - "8080:80"

  mysqld-exporter:
    image: prom/mysqld-exporter
    container_name: mysqld-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: root:password1234@(sql-primary:3306)/
    volumes:
      - ./mysql-exporter/my.cnf:/.my.cnf
    ports:
      - "9104:9104"
    networks:
      - mariadb-network
      - frontend
    depends_on:
      sql-primary:
        condition: service_healthy

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - frontend
    depends_on:
      - mysqld-exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    networks:
      - frontend

networks:
  mariadb-network:
    driver: bridge
  frontend:
volumes:
  master_data:
  replica_data:
